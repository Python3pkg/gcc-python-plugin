digraph test_script {
  subgraph malloc_checker {
    ptr_all [label=<ptr.all>];
    ptr_unchecked [label=<ptr.unchecked>];
    ptr_null [label=<ptr.null>];
    ptr_nonnull [label=<ptr.nonnull>];
    ptr_free [label=<ptr.free>];

    ptr_all -> ptr_unchecked [label=<{ ptr = malloc() }>];
    ptr_all -> ptr_null [label=<{ ptr = 0 }>];
    ptr_unchecked -> ptr_null [label=<{ ptr == 0 } is True>];
    ptr_unchecked -> ptr_nonnull [label=<{ ptr == 0 } is False>];
    ptr_unchecked -> ptr_nonnull [label=<{ ptr != 0 } is True>];
    ptr_unchecked -> ptr_null [label=<{ ptr != 0 } is False>];
    ptr_null -> ptr_null [label=<{ ptr == 0 } is True>];
    ptr_null -> ptr_nonnull [label=<{ ptr == 0 } is False>];
    ptr_null -> ptr_nonnull [label=<{ ptr != 0 } is True>];
    ptr_null -> ptr_null [label=<{ ptr != 0 } is False>];
    ptr_nonnull -> ptr_null [label=<{ ptr == 0 } is True>];
    ptr_nonnull -> ptr_nonnull [label=<{ ptr == 0 } is False>];
    ptr_nonnull -> ptr_nonnull [label=<{ ptr != 0 } is True>];
    ptr_nonnull -> ptr_null [label=<{ ptr != 0 } is False>];
    ptr_unchecked -> ptr_unchecked [label=<{ *ptr }:  error(&apos;use of possibly-NULL pointer %s&apos; % ptr) >];
    ptr_unchecked -> ptr_nonnull [label=<{ *ptr }>];
    ptr_null -> ptr_null [label=<{ *ptr }:  error(&apos;use of NULL pointer %s&apos; % ptr) >];
    ptr_all -> ptr_free [label=<{ free(ptr) } >];
    ptr_unchecked -> ptr_free [label=<{ free(ptr) } >];
    ptr_null -> ptr_free [label=<{ free(ptr) } >];
    ptr_nonnull -> ptr_free [label=<{ free(ptr) } >];
    ptr_free -> ptr_free [label=<{ free(ptr) } :  error(&apos;double-free of %s&apos; % ptr) >];
    ptr_free -> ptr_free [label=<{ ptr }:  error(&apos;use-after-free of %s&apos; % ptr) >];
    ptr_unchecked -> ptr_unchecked [label=<{ memset(ptr) } :  error(&apos;use of possibly-NULL pointer %s&apos; % ptr) >];
    ptr_null -> ptr_null [label=<{ memset(ptr) } :  error(&apos;use of NULL pointer %s&apos; % ptr) >];
    ptr_free -> ptr_free [label=<{ memset(ptr) } :  error(&apos;use-after-free of %s&apos; % ptr) >];
    ptr_unchecked -> ptr_unchecked [label=<$leaked$:  error(&apos;leak of %s&apos; % ptr) >];
    ptr_nonnull -> ptr_nonnull [label=<$leaked$:  error(&apos;leak of %s&apos; % ptr) >];
  }
}

