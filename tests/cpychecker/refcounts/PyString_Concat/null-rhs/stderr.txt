tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c: In function 'test':
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:32:5: warning: returning (PyObject*)NULL without setting an exception [enabled by default]
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:29:20: note: when treating unknown struct PyObject * * from tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:27 as non-NULL at:     PyString_Concat(str, NULL);
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:29:20: note: when treating unknown struct PyObject * from tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:29 as non-NULL at:     PyString_Concat(str, NULL);
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:32:5: note: when PyString_Concat() cleans up due to NULL right-hand side (Py_DECREF() without deallocation on *LHS) at:     return *str;
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:32:5: note: returning at:     return *str;
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:32:5: note: found 2 similar trace(s) to this
tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c:28:1: note: graphical error report for function 'test' written out to 'tests/cpychecker/refcounts/PyString_Concat/null-rhs/input.c.test-refcount-errors.html'
