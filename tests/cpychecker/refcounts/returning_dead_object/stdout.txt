Trace 0:
  Transitions:
    'PyLong_FromLong() succeeds'
    'taking False path'
    'taking True path'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29), region=RegionOnHeap('PyLongObject', gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29)))
    str(): (struct PyObject *)&RegionOnHeap('PyLongObject', gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29)) from tests/cpychecker/refcounts/returning_dead_object/input.c:29
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29), region=RegionForGlobal(gcc.VarDecl('PyLong_Type')))
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/returning_dead_object/input.c:27

Trace 1:
  Transitions:
    'PyLong_FromLong() succeeds'
    'taking False path'
    'taking False path'
    'calling tp_dealloc on PyLongObject allocated at tests/cpychecker/refcounts/returning_dead_object/input.c:29'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29), region=RegionOnHeap('PyLongObject', gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29)))
    str(): (struct PyObject *)&RegionOnHeap('PyLongObject', gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=29)) from tests/cpychecker/refcounts/returning_dead_object/input.c:29
    r->ob_refcnt: None
    r->ob_type: None
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/returning_dead_object/input.c:27

Trace 2:
  Transitions:
    'PyLong_FromLong() fails'
    'taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=32), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/returning_dead_object/input.c:32
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: RefcountValue(0)
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/returning_dead_object/input.c', line=26), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    RegionForGlobal(gcc.VarDecl('PyExc_MemoryError'))
