Trace 0:
  Transitions:
    'PyArg_ParseTuple() succeeds'
    'taking False path'
    'PyString_FromString() succeeds'
    'returning'
  Return value:
    repr(): PointerToRegion(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=52), region=RegionOnHeap('PyStringObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=52)))
    str(): (struct PyObject *)&RegionOnHeap('PyStringObject', gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=52)) from tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c:52
    r->ob_refcnt: refs: 1 + N where N >= 0
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=52), region=RegionForGlobal(gcc.VarDecl('PyString_Type')))
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c:36

Trace 1:
  Transitions:
    'PyArg_ParseTuple() succeeds'
    'taking False path'
    'PyString_FromString() fails'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=52), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c:52
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    RegionForGlobal(gcc.VarDecl('PyExc_MemoryError'))

Trace 2:
  Transitions:
    'PyArg_ParseTuple() fails'
    'taking True path'
    'returning'
  Return value:
    repr(): ConcreteValue(gcctype='struct PyObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=41), value=0)
    str(): (struct PyObject *)0 from tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c:41
  Region("region-for-arg-gcc.ParmDecl('self')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('self')")
    str(): Region("region-for-arg-gcc.ParmDecl('self')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('self')"))
  Region("region-for-arg-gcc.ParmDecl('args')"):
    repr(): Region("region-for-arg-gcc.ParmDecl('args')")
    str(): Region("region-for-arg-gcc.ParmDecl('args')")
    r->ob_refcnt: refs: 0 + N where N >= 1
    r->ob_type: PointerToRegion(gcctype='struct PyTypeObject *', loc=gcc.Location(file='tests/cpychecker/refcounts/PyArg_ParseTuple/correct_O_bang/input.c', line=35), region=Region("region-for-type-of-arg-gcc.ParmDecl('args')"))
  Exception:
    RegionForGlobal(gcc.VarDecl('PyExc_TypeError'))
