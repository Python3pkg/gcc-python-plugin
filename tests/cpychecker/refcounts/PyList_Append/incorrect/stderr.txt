tests/cpychecker/refcounts/PyList_Append/incorrect/input.c: In function 'test':
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:54:1: error: ob_refcnt of PyLongObject is 1 too high
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:54:1: note: was expecting final ob_refcnt to be N + 1 (for some unknown N)
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:54:1: note: due to object being referenced by: PyListObject.ob_item[0]
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:54:1: note: but final ob_refcnt is N + 2
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:36:10: note: PyLongObject allocated at:     item = PyLong_FromLong(42);
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:32:10: note: when PyList_New() succeeds at:     list = PyList_New(0);
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:33:8: note: taking False path at:     if (!list) {
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:36:10: note: reaching:     item = PyLong_FromLong(42);
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:36:10: note: when PyLong_FromLong() succeeds at:     item = PyLong_FromLong(42);
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:36:10: note: ob_refcnt is now refs: 1 + N where N >= 0
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:37:8: note: taking False path at:     if (!item) {
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:42:28: note: reaching:     if (-1 == PyList_Append(list, item)) {
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:42:28: note: when PyList_Append() succeeds at:     if (-1 == PyList_Append(list, item)) {
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:42:28: note: ob_refcnt is now refs: 2 + N where N >= 0
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:42:28: note: PyLongObject is now referenced by 1 non-stack value(s): PyListObject.ob_item[0]
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:42:8: note: taking False path at:     if (-1 == PyList_Append(list, item)) {
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:53:5: note: reaching:     return list;
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:54:1: note: returning
tests/cpychecker/refcounts/PyList_Append/incorrect/input.c:28:1: note: graphical error report for function 'test' written out to 'tests/cpychecker/refcounts/PyList_Append/incorrect/input.c.test-refcount-errors.html'
