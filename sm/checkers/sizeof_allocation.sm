/*
   Copyright 2012 David Malcolm <dmalcolm@redhat.com>
   Copyright 2012 Red Hat, Inc.

   This is free software: you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see
   <http://www.gnu.org/licenses/>.

   Checker to detect typos of the form:  malloc(sizeof(WRONG_TYPE))
*/
sm sizeof_allocation {
  state decl any_pointer ptr;
  decl any_expr sz;

  ptr.all:
     { ptr = malloc(sz) } =>
         {{
             import gcc
             type_pointed_to = ptr.type.dereference
             if not isinstance(type_pointed_to, gcc.VoidType):
                 required_size = type_pointed_to.sizeof
                 if sz < required_size:
                     error("malloc too small: pointer to %s (%i bytes)"
                           " initialized with malloc of %i bytes"
                           % (type_pointed_to, required_size, sz))
         }};
}
