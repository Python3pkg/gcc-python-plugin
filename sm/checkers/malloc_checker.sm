/*
    Work-in-progress checker for malloc/free usage
 */
sm malloc_checker {
  stateful decl any_pointer ptr;

  ptr.*:
    { ptr = malloc() } =>  ptr.unchecked;

  ptr.*:
    { ptr = 0 } =>  ptr.null;

  ptr.*:
      { ptr == 0 } => true=ptr.null, false=ptr.nonnull
    | { ptr != 0 } => true=ptr.nonnull, false=ptr.null
    ;

  ptr.unchecked:
    { *ptr }
      => {{
            error('use of possibly-NULL pointer %s' % ptr,
                  # "CWE-690: Unchecked Return Value to NULL Pointer Dereference"
                  cwe='CWE-690')
         }}, ptr.nonnull;

  ptr.null:
    { *ptr }
      => {{
            error('use of NULL pointer %s' % ptr,
                  # "CWE-690: Unchecked Return Value to NULL Pointer Dereference"
                  cwe='CWE-690')
         }};

  ptr.start, ptr.unchecked, ptr.null, ptr.nonnull:
    { free(ptr) } => ptr.free;

  ptr.free:
      { free(ptr) }
          => {{
                error('double-free of %s' % ptr,
                      # "CWE-415: Double Free"
                      cwe='CWE-415')
             }}
    | { ptr }
          => {{
                error('use-after-free of %s' % ptr,
                      # "CWE-416: Use After Free"
                      cwe='CWE-416')
             }}
    ;

  ptr.unchecked:
    $arg_must_not_be_null$
      => {{
            error('possibly-NULL pointer %s passed as argument %i to %s'
                  % (ptr, argnumber, function),
                  # "CWE-690: Unchecked Return Value to NULL Pointer Dereference"
                  cwe='CWE-690')
          }};

  ptr.null:
    $arg_must_not_be_null$
      => {{
            error('NULL pointer %s passed as argument %i to %s',
                  % (ptr, argnumber, function),
                  # "CWE-690: Unchecked Return Value to NULL Pointer Dereference"
                  cwe='CWE-690')
         }};

  ptr.unchecked, ptr.nonnull:
    $leaked$
      => {{
            error('leak of %s' % ptr,
                  # This appears to be:
                  # "CWE-401: Improper Release of Memory Before Removing
                  #  Last Reference ('Memory Leak')"
                  # although the title of CWE-401 appears to be misleading
                  cwe='CWE-401')
         }};
}
