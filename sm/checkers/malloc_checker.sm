/*
    Work-in-progress checker for malloc/free usage
 */
sm malloc_checker {
  state decl any_pointer ptr;

  ptr.all:
    { ptr = malloc() } =>  ptr.unchecked;

  ptr.all:
    { ptr = 0 } =>  ptr.null;

  ptr.unchecked, ptr.null, ptr.nonnull:
      { ptr == 0 } => true=ptr.null, false=ptr.nonnull
    | { ptr != 0 } => true=ptr.nonnull, false=ptr.null
    ;

  ptr.unchecked:
    { *ptr } => {{ error('use of possibly-NULL pointer %s' % ptr) }}, ptr.nonnull;

  ptr.null:
    { *ptr } => {{ error('use of NULL pointer %s' % ptr) }};

  ptr.all, ptr.unchecked, ptr.null, ptr.nonnull:
    { free(ptr) } => ptr.free;

  ptr.free:
      { free(ptr) } => {{ error('double-free of %s' % ptr) }}
    | { ptr } => {{ error('use-after-free of %s' % ptr) }}
    ;

  ptr.unchecked:
      { memset(ptr) } => {{ error('use of possibly-NULL pointer %s' % ptr) }};

  ptr.null:
      { memset(ptr) } => {{ error('use of NULL pointer %s' % ptr) }};

  ptr.free:
      { memset(ptr) } => {{ error('use-after-free of %s' % ptr) }};

  ptr.unchecked, ptr.nonnull:
      $leaked$ => {{ error('leak of %s' % ptr) }};

}
